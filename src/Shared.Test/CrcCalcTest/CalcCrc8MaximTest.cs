using System.Collections.Generic;
using System.Globalization;
using System.Linq;
using System.Text;
using FluentAssertions;
using Shared.CrcCalculate;
using Xunit;

namespace Shared.Test.CrcCalcTest
{
    public class CalcCrc8MaximTest
    {
        public static IEnumerable<object[]> Datas => new[]
        {
            // new object[]
            // {
            //    new byte[] { 0x01, 0x04, 0x4A, 0x10 },
            //    0xF0
            // },
            // new object[]
            // {
            //     new byte[] {
            //         0x01, 0x81, 0x10, 0x02, 0x01, 0x01, 0x00, 0x02, 0x80, 0x00, 0x73, 0x04, 0x04, 0x7c, 0x04,
            //         0x04, 0x7c, 0x54, 0x54, 0x54, 0x44, 0x38, 0x44, 0x44, 0x44, 0x44, 0x04, 0x04, 0x7c, 0x04, 0x04,
            //         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            //         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            //         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            //         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            //         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            //         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
            //         0x4f, 0xa6},
            //     0x3A
            // },
            
            //Для вокзала Сеятель Новосибирск
            // new object[]
            // {
            //      ("A5 02 01 FE 03 15 39 39 39 39 9E D2 C5 D1 D2 20 " +
            //       "20 20 20 20 20 20 00 00 00 00 00 00 00 00 00 00 " +
            //       "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
            //       "00 00 00 00 00 00 00 31 32 30 30 9E C5 C6 C5 C4 " +
            //       "CD C5 C2 CD CE 20 20 20 00 00 00 00 00 00 00 00 " +
            //       "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
            //       "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
            //       "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
            //       "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
            //       "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
            //       "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
            //       "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
            //       "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
            //       "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
            //       "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
            //       "9E D2 C5 D1 D2 20 CE D1 D2 C0 CD CE C2 00 00 00 " +
            //       "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
            //       "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
            //       "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
            //       "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
            //       "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
            //       "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
            //       "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
            //       "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
            //       "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
            //       "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
            //       "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
            //       "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
            //       "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
            //       "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
            //       "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
            //       "00 00 00 00 00 00 00 00 00 00 00 00 46")
            //     .Split(' ').Select(s => byte.Parse(s, NumberStyles.HexNumber)).ToArray(),
            //     
            //     0xBD
            // },
            
            new object[]
            {
                 ("A5 02 01 FE 03 03 36 36 31 37 9E C1 C5 D0 C4 D1 " +
                  "CA 20 20 20 20 20 00 00 00 00 00 00 00 00 00 00 " +
                  "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
                  "00 00 00 00 00 00 00 30 36 34 38 9E C5 2E 20 CA " +
                  "D0 2E 20 D1 2E 20 C2 2E 00 00 00 00 00 00 00 00 " +
                  "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
                  "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
                  "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
                  "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
                  "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
                  "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
                  "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
                  "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
                  "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
                  "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
                  "0A CE C1 D1 CA CE C5 20 CC CE D0 C5 2C 20 C1 C5 " +
                  "D0 C5 C3 CE C2 C0 DF 2C 20 D0 C5 D7 CA D3 CD CE " +
                  "C2 CA C0 20 20 20 20 20 00 00 00 00 00 00 00 00 " +
                  "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
                  "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
                  "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
                  "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
                  "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
                  "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
                  "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
                  "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
                  "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
                  "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
                  "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
                  "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
                  "00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 " +
                  "00 00 00 00 00 00 00 00 00 00 00 00 46"
                  )
                .Split(' ').Select(s => byte.Parse(s, NumberStyles.HexNumber)).ToArray(),
                
                0x72
            },
            
        };
        [Theory]
        [MemberData(nameof(Datas))]
        public void Check(byte[] arr, byte expectedCrc)
        {
            var crc= CrcCalc.CalcCrc8Maxim(arr).First();
            crc.Should().Be(expectedCrc);
        }
    }
}